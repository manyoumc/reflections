When would you want to use a remote repository rather than keeping all your work
local?

    To allow other users to contribute or to work from different PCs on my project.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    To be able to work on my own versions of the project. Otherwise my changes would maybe get discarded sometimes.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Clone = Independent Copy of an repository on your local PC -> making an own version for myself
	Fork = Copy of repository on Github, keeps connected to the original repository -> working on an foreign project while crediting the original author
	Branch = (experimental) version of the project seperated from the master branch -> adding experimental feautures to an existing project = part of the project

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can compare it with your local state (git diff) and see what changes are going to be pushed/pulled

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Harder: you had to compare your changes manually and finally mix it together -> a lot of effort and possible mistakes
			you had spend most time together at the same location while coding
	Easier: easier communication and coordination if working together at the same time at the same location

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here

	
Other Notes:

git fetch +	git merge =	git pull

Overview about different "locations":
working directory
staging area
Git Local Repository
Pointer to last known state of remote(origin/master) 
Github Remote Repository


